#include <iostream>
#include <string>
#include <vector>
#include <fstream>

using namespace std;

class Imobil
{
private:
	float *suprafete;
	int nrCamere;
	string zona;
	float pretM;
public:

	Imobil() {
		this->nrCamere = 0;
		this->zona = "Nu are";
		this->pretM = 0.0;
		this->suprafete = NULL;
	}

	Imobil(int nr, float pr,string zona,float *supr) {
		this->nrCamere = nr;
		this->pretM = pr;
		this->zona = zona;
		this->suprafete = new float[this->nrCamere];
		for (int i = 0; i < this->nrCamere; i++)
			this->suprafete[i] = supr[i];
	}

	Imobil(const Imobil & a) {
		this->nrCamere = a.nrCamere;
		this->pretM = a.pretM;
		this->zona = a.zona;
		this->suprafete = new float[this->nrCamere];
		for (int i = 0; i < this->nrCamere; i++)
			this->suprafete[i] = a.suprafete[i];
	}

	Imobil operator=(const Imobil & a) {
		this->nrCamere = a.nrCamere;
		this->pretM = a.pretM;
		this->zona = a.zona;
		this->suprafete = new float[this->nrCamere];
		for (int i = 0; i < this->nrCamere; i++)
			this->suprafete[i] = a.suprafete[i];
		return *this;
	}

	Imobil & operator--() {
		this->pretM--;
		return *this;
	}

	Imobil & operator--(int)
	{
		Imobil & copie = *this;
		this->pretM--;
		return copie;
	}

	Imobil & operator+(int val) {
		Imobil & copie = *this;
		this->pretM = this->pretM + val;
		return copie;
	}

	~Imobil() {
		if(this->suprafete!=NULL)
			delete[] suprafete;
	}

	void setPret(float pret) {
		if(pret>=1.0)
			this->pretM = pret;
	}

	void setZona(string  zona) {

		if(zona.length()>=2)
			this->zona = zona;
	}

	virtual float SuprafataTotala()
	{
		float s = 0.0;
		for (int i = 0; i < this->nrCamere; i++)
			s = s + this->suprafete[i];
		return s;
	}

	float PretTotal()
	{
		float s = 0.0;
		s = this->SuprafataTotala()*this->pretM;
		return s;
	}

	friend ostream & operator<<(ostream & out , Imobil & a) {
		out << endl << "Zona:" << a.zona;
		out << endl << "Nr Camere:" << a.nrCamere;
		out << endl << "Suprafete Camere: ";
		for (int i = 0; i < a.nrCamere; i++)
			out << a.suprafete[i] << " ";
		out << endl << "Pret m^2: " << a.pretM;
		out << endl;
		return out;
	}

	friend ifstream & operator>>(ifstream & fin, Imobil & a) {
		fin >> a.zona >> a.pretM >> a.nrCamere;
		a.suprafete = new float[a.nrCamere];
		for (int i = 0; i < a.nrCamere; i++)
			fin >> a.suprafete[i];
		return fin;
	}
};

//class Casa : Imobil
float Suprafata totala

int main() 
{
	float a[3] = { 5.0,12.2,23.5 };
	Imobil i1;
	Imobil i2(3, 20.0, "Tineretului", a);
	Imobil i3=i2;
	i3.setPret(5.5);
	i3.setZona("Sincai");
	cout << i2;
	cout << i3;
	cout << i3.SuprafataTotala()<<endl;
	cout << i3.PretTotal()<<endl;
	i3--;
	cout << i3.PretTotal() << endl;
	i3 + 10;
	cout << i3.PretTotal() << endl;

	ifstream in("imobil.txt", ios::in);
	Imobil im1[3];
	in >> im1[0] >> im1[1] >> im1[2];
	cout << im1[0]<<im1[1]<<im1[2];
	return 0;
}